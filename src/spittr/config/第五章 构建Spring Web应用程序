#AbstractAnnotationConfigDispatcherServletInitializer剖析
	在Servlet3.0环境中,容器会在类路径中查找发现javax.servlet.ServletContainerInitializer接口的类,如果能发现的话,就用它来配置Servlet容器.
	Spring提供了这个接口的实现,名为SpringServletContainerInitializer,这个类反过来又会查找实现WebApplicationInitializer的类并将配置的任务交给它们来完成.Spring3.2引入了一个便利的WebApplicationInitializer的基础实现,也就是AbstractAnnotationConfigDispatcherServletInitializer.因为我们的SpittrWebAppInitializer扩展了AbstractAnnotationConfigDispatcherServletInitializer(同时也就实现了WebApplicationInitializer),因此当部署到Servlet3.0容器中的时候,容器会自动发现它,并用它来配置Servlet上下文.

#两个应用上下文之间的故事
	当DispatcherServlet启动的时候,它会启动Spring应用上下文,并配置文件或配置类中所声明的bean.
	
	但是在Spring Web应用中,通常还有另外一个应用上下文.另外的这个应用上下文是由ContextLoaderListener创建.
	
	我们希望DispatcherServlet加载包含Web组件的bean,如控制器,视图解析器以及处理器映射.而ContextLoaderListener要加载应用中的其它bean.这些bean通常是驱动应用后端的中间层和数据层组件.
	
实际上,AbstractAnnotationConfigDispatcherServletInitializer会同时创建DispatcherServlet和ContextLoaderListener.

GetServletConfigClasses()方法返回的带有@Configuration注解的类将会用来定义DispatcherServlet应用上下文中的bean.










